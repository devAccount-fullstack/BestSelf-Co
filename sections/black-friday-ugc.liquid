<section
  id="black-friday-ugc-{{ section.id }}"
  class="black-friday-ugc"
  style="background-color: {{ section.settings.bg_color }};"
>
  <div class="ugc-container">
    {% if section.settings.heading != blank %}
      <h2 class="ugc-heading">{{ section.settings.heading }}</h2>
    {% endif %}

    <div class="ugc-slider splide" id="ugc-slider-{{ section.id }}">
      <div class="splide__track">
        <ul class="splide__list">
          {% for block in section.blocks %}
            <li class="splide__slide">
              <div class="ugc-video-thumb" data-video="{{ block.settings.video_url }}">
                {% if block.settings.thumbnail %}
                  <img
                    src="{{ block.settings.thumbnail | image_url: width: 600 }}"
                    alt="UGC thumbnail"
                    class="ugc-thumbnail"
                    width="180"
                    height="180"
                  >
                {% else %}
                  <div class="ugc-placeholder"></div>
                {% endif %}
                <div class="ugc-play-btn">
                  â–¶
                </div>
              </div>
            </li>
          {% endfor %}
        </ul>
      </div>
    </div>
  </div>

  <!-- Video Modal -->
  <div class="ugc-modal" id="ugc-modal-{{ section.id }}">
    <div class="ugc-modal-content">
      <span class="ugc-modal-close">&times;</span>
      <div class="ugc-video-container">
        <iframe
          id="ugc-video-frame-{{ section.id }}"
          src=""
          frameborder="0"
          allow="autoplay; encrypted-media"
          allowfullscreen
        ></iframe>
      </div>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Black Friday UGC",
  "settings": [
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color",
      "default": "#1e1f3a"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading",
      "default": "UGC display here"
    }
  ],
  "blocks": [
    {
      "type": "video_block",
      "name": "UGC Video",
      "settings": [
        {
          "type": "image_picker",
          "id": "thumbnail",
          "label": "Thumbnail Image"
        },
        {
          "type": "url",
          "id": "video_url",
          "label": "Video URL (YouTube/Vimeo)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Black Friday UGC",
      "category": "Black Friday"
    }
  ]
}
{% endschema %}


<style>
.black-friday-ugc {
  padding: 60px 0;
  color: #fff;
  text-align: center;
  font-family: "Poppins", sans-serif;
}

.ugc-container {
  max-width: 90%;
  margin: 0 auto;
}

.ugc-heading {
  font-size: 22px;
  margin-bottom: 30px;
}

.splide__slide {
  display: flex;
  justify-content: center;
}

.ugc-video-thumb {
  position: relative;
  width: 180px;
  height: 180px;
  border-radius: 10px;
  overflow: hidden;
  background-color: #43445a;
  cursor: pointer;
  transition: transform 0.3s ease;
}

.ugc-video-thumb:hover {
  transform: scale(1.05);
}

.ugc-thumbnail {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.ugc-placeholder {
  width: 100%;
  height: 100%;
  background-color: #50516e;
}

.ugc-play-btn {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 28px;
  color: #ffd85c;
  pointer-events: none;
}

/* Modal */
.ugc-modal {
  display: none;
  position: fixed;
  z-index: 999;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.8);
  justify-content: center;
  align-items: center;
}

.ugc-modal-content {
  position: relative;
  background: #000;
  padding: 10px;
  border-radius: 10px;
  max-width: 800px;
  width: 90%;
}

.ugc-modal-close {
  position: absolute;
  top: 10px;
  right: 15px;
  color: #fff;
  font-size: 28px;
  cursor: pointer;
}

.ugc-video-container iframe {
  width: 100%;
  height: 450px;
  border: none;
}

@media (max-width: 768px) {
  .ugc-video-thumb {
    width: 140px;
    height: 140px;
  }

  .ugc-video-container iframe {
    height: 250px;
  }
}
</style>

<script>
document.addEventListener("DOMContentLoaded", function () {
  var splide = new Splide("#ugc-slider-{{ section.id }}", {
    type: "loop",
    perPage: 3,
    gap: "1rem",
    breakpoints: {
      768: { perPage: 2 },
      480: { perPage: 1 },
    },
  });
  splide.mount();

  const modal = document.getElementById("ugc-modal-{{ section.id }}");
  const iframe = document.getElementById("ugc-video-frame-{{ section.id }}");
  const closeBtn = modal.querySelector(".ugc-modal-close");

  // Helper: Convert any YouTube/Vimeo link into embeddable URL
  function getEmbedUrl(url) {
    if (!url) return "";

    // --- YouTube formats ---
    // 1. Normal YouTube link (watch?v=xxxx)
    if (url.includes("youtube.com/watch?v=")) {
      const videoId = new URL(url).searchParams.get("v");
      return `https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0&modestbranding=1`;
    }

    // 2. Short YouTube link (youtu.be/xxxx)
    if (url.includes("youtu.be/")) {
      const videoId = url.split("youtu.be/")[1].split("?")[0];
      return `https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0&modestbranding=1`;
    }

    // 3. Already in embed format
    if (url.includes("youtube.com/embed/")) {
      return url.includes("?")
        ? `${url}&autoplay=1&rel=0&modestbranding=1`
        : `${url}?autoplay=1&rel=0&modestbranding=1`;
    }

    // --- Vimeo format ---
    if (url.includes("vimeo.com/")) {
      const videoId = url.split("vimeo.com/")[1].split("?")[0];
      return `https://player.vimeo.com/video/${videoId}?autoplay=1`;
    }

    return url;
  }

  // Open modal on click
  document.querySelectorAll("#ugc-slider-{{ section.id }} .ugc-video-thumb").forEach(el => {
    el.addEventListener("click", () => {
      const videoUrl = el.getAttribute("data-video");
      const embedUrl = getEmbedUrl(videoUrl);

      if (embedUrl) {
        iframe.src = embedUrl;
        modal.style.display = "flex";
      }
    });
  });

  // Close modal
  closeBtn.addEventListener("click", () => {
    modal.style.display = "none";
    iframe.src = "";
  });

  window.addEventListener("click", (e) => {
    if (e.target === modal) {
      modal.style.display = "none";
      iframe.src = "";
    }
  });
});
</script>
