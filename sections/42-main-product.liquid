{% liquid
  assign images = product.media | where: 'media_type', 'image'
  assign custom_image = custom_image | default: images[0]

  assign current_variant = product.selected_or_first_available_variant
  assign show_newsletter = settings.show_newsletter

  assign show_buy_now_button = section.settings.show_buy_now_button
  assign show_cart_bar = section.settings.show_cart_bar

  assign pt_mob = section.settings.pt_mob
  assign pb_mob = section.settings.pb_mob
  assign pt_tab = section.settings.pt_tab
  assign pb_tab = section.settings.pb_tab
  assign pt_desk = section.settings.pt_desk
  assign pb_desk = section.settings.pb_desk

  assign is_show_pairs_well_with = false
  assign pairs_well_with = section.blocks | where: 'type', 'pairs_well_with'

  if pairs_well_with.size > 0
    assign is_show_pairs_well_with = true
  endif
%}

{% render 'section-paddings',
  section_id: section.id,
  pt_mob: pt_mob,
  pb_mob: pb_mob,
  pt_tab: pt_tab,
  pb_tab: pb_tab,
  pt_desk: pt_desk,
  pb_desk: pb_desk
%}

<style>
  .product-42 .jdgm-prev-badge__text {
    font-weight: 400 !important;
    font-size: 10px !important;
    line-height: 12px !important;
    letter-spacing: 0;
    color: black !important;
    margin-left: 7px;
  }
  
  
  @media screen and (min-width: 768px) {
    .product-42 .jdgm-prev-badge__text {
      font-size: 12px !important;
      line-height: 15px !important;
    }
  }
</style>

{%- style -%}
  {%- if show_cart_bar -%}
    :root { --cart-bar-height: 80px; }
  {%- endif -%}
{%- endstyle -%}

<div id="main-product-42">
  <div
    data-section-id="{{ section.id }}"
    class="product-42"
    x-data="
      product({
        product:  {{ product | json | escape }},
        productOptions: {{ product.options_with_values | json | escape  }},
        selectedVariant: {% if product.selected_or_first_available_variant %}{{ product.selected_or_first_available_variant | json | escape  }}{% else %}{{ product.variants[0] | json | escape  }}{% endif %}
      })
    "
  >
    <div class="container-42">
      <div class="tw-relative tw-flex tw-flex-col md:tw-flex-row tw-gap-[15px] md:tw-gap-[30px] lg:tw-gap-[52px]">
        <!-- SWIPER GALLERY -->
        <div class="md:tw-w-[54.80%] tw-w-full md:tw-sticky tw-top-15 md:tw-h-fit">
          {% render '42-product-gallery', product: product, show_nav_btn: section.settings.show_nav_btn %}
        </div>

        <!-- PRODUCT INFO -->
        <div class="tw-flex tw-flex-col tw-w-full lg:tw-w-[34.10%]">
          {% for block in section.blocks %}
            {% case block.type %}
              {% when '@app' %}
                <div class="tw-mt-2.5 lg:tw-mt-4">
                  {%- render block -%}
                </div>
              {% when 'badge' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-block' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)]{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                >
                  {% render '42-product-badge', product: product, block: block %}
                </div>
              {% when 'title' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-block' %}
                {% endif %}
                
                {% comment %} Determine the title to display {% endcomment %}
                {% assign display_title = '' %}
                {% if block.settings.custom_title != blank %}
                  {% assign display_title = block.settings.custom_title %}
                {% elsif block.settings.title_metafield != blank %}
                  {% assign metafield_parts = block.settings.title_metafield | split: '.' %}
                  {% if metafield_parts.size == 3 %}
                    {% assign namespace = metafield_parts[0] %}
                    {% assign key = metafield_parts[1] %}
                    {% assign display_title = product.metafields[namespace][key].value %}
                  {% endif %}
                {% endif %}
                
                {% if display_title == blank %}
                  {% assign display_title = product.title %}
                {% endif %}
                
                {% comment %} Calculate text sizes and line heights {% endcomment %}
                {% assign mobile_size = block.settings.text_size_mobile | default: 28 %}
                {% assign desktop_size = block.settings.text_size_desktop | default: 32 %}
                {% assign mobile_line_height = mobile_size | times: 1.25 %}
                {% assign desktop_line_height = desktop_size | times: 1.25 %}
                
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)]{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                  data-title-block
                >
                  <style>
                    #title-{{ block.id }} {
                      font-size: {{ mobile_size }}px;
                      line-height: {{ mobile_line_height }}px;
                    }
                    @media (min-width: 1024px) {
                      #title-{{ block.id }} {
                        font-size: {{ desktop_size }}px;
                        line-height: {{ desktop_line_height }}px;
                      }
                    }
                  </style>
                  <h1 id="title-{{ block.id }}" class="tw-text-black tw-font-bold">
                    {{ display_title }}
                  </h1>
                </div>

              {% when 'price' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-flex' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] tw-flex tw-items-center{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                  data-price-block
                >
                  <span
                    aria-label="price"
                    class="tw-text-[#0009FF] tw-font-medium tw-text-[20px] tw-leading-[28px] lg:tw-text-[24px]"
                    x-text="formatMoney(selectedVariant?.price)"
                  >
                  </span>
                  <template x-if="selectedVariant?.compare_at_price && selectedVariant?.compare_at_price > selectedVariant?.price">
                    <span
                      aria-label="compare at price"
                      class="tw-ml-1.5 tw-text-[#888888] tw-font-medium tw-text-[20px] tw-leading-[28px] lg:tw-text-[24px] tw-line-through"
                      x-text="formatMoney(selectedVariant?.compare_at_price)"
                    >
                    </span>
                  </template>
                  {% if block.settings.show_badge_save %}
                    <template x-if="selectedVariant?.compare_at_price && selectedVariant?.compare_at_price > selectedVariant?.price">
                      <span class="tw-ml-[11px] tw-min-h-5.5 tw-rounded-[120px] tw-font-medium tw-flex tw-items-center tw-bg-black tw-px-2 tw-text-white tw-text-[9px]">
                        <span
                          class="tw-flex tw-mr-[2px]"
                          x-text="Math.round(((selectedVariant?.compare_at_price - selectedVariant?.price) / selectedVariant?.price) * 100) + '%'"
                        >
                        </span>
                        OFF
                      </span>
                    </template>
                  {% endif %}
                </div>

              {% when 'text' %>
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-block' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] tw-text-black tw-text-[15px] tw-leading-[22px]{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                >
                  {{ block.settings.description }}
                </div>

              {% when 'variant_picker' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-flex' %}
                {% endif %}
                {% form 'product', product %}
                  {% unless product.has_only_default_variant %}
                    <div
                      class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] tw-flex tw-flex-col tw-gap-4{{ mobile_class }}"
                      style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                    >
                      <template x-for="option in productOptions" :key="option.name">
                        <div class="tw-flex tw-flex-col tw-gap-4">
                          <div class="tw-text-black tw-text-[16px] tw-leading-[16px]">
                            <span class="tw-font-medium" x-text="option.name + ':'"></span>
                            <span class="tw-font-normal" x-text="selectedVariant?.title"></span>
                          </div>
                          <div class="tw-flex tw-flex-wrap tw-gap-2.5">
                            <template x-for="value in option.values" :key="value">
                              <template x-if="option.name.toLowerCase().includes('color')">
                                <button
                                  type="button"
                                  @click="
                                    changeVariant({ name: option.name }, value);
                                    scrollToColor();
                                  "

                                  class="tw-w-10 tw-h-10 tw-rounded-full tw-flex tw-justify-center tw-items-center"
                                  :class="
                                    {
                                      active: selectedVariant?.options.includes(value),
                                      ['swatch-' + value.toLowerCase().replace(/\s/g, '-')]: true
                                    }
                                  "
                                  :style="selectedVariant?.options.includes(value) ? 'border: 1px solid #2C3C60' : ''"
                                >
                                  <span
                                    class="swatches tw-rounded-full tw-w-8.5 tw-h-8.5 tw-flex"
                                    :style="`--swatch: var(--${value.toLowerCase().replace(/\s/g, '-')}); background-color: var(--${value.toLowerCase().replace(/\s/g, '-')});`"
                                  ></span>
                                </button>
                              </template>

                              <template x-if="!option.name.toLowerCase().includes('color')">
                                <button
                                  type="button"
                                  style="border: 1px solid #2C3C60;"
                                  @click="
                                    changeVariant({
                                      name: option.name,
                                    }, value)
                                  "
                                  class="tw-flex tw-items-center tw-justify-center tw-px-3 tw-min-h-7"
                                  :class="
                                    {
                                      active: selectedVariant?.options.includes(value)
                                    }
                                  "
                                >
                                  <span class="tw-text-sc-blue tw-text-xs" x-text="value"></span>
                                </button>
                              </template>
                            </template>
                          </div>
                        </div>
                      </template>
                    </div>
                  {% endunless %}
                {% endform %}

              {% when 'buy_buttons' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-flex' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] tw-flex tw-flex-col tw-gap-3{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                  x-intersect:leave="showSticky = true"
                  x-intersect:enter="showSticky = false"
                >
                  <div class="tw-flex tw-gap-2.5">
                    <!-- PRODUCT QUANTITY -->
                    <div
                      style="border: 1px solid #2C3C6080"
                      class="tw-shrink-0 tw-flex tw-rounded-[144px] tw-justify-between tw-overflow-hidden tw-items-center tw-w-[94px] tw-h-12 lg:tw-h-11"
                    >
                      <button
                        @click="if (quantity > 1) quantity--"
                        type="button"
                        class="tw-h-full tw-w-[38px] tw-flex tw-justify-center tw-items-center tw-touch-manipulation"
                      >
                        {% render 'icon-42', name: 'quantity-minus' %}
                      </button>
                      <span x-text="quantity" class="tw-text-center tw-text-sc-blue tw-text-[12px]"></span>
                      <button
                        @click="quantity++"
                        type="button"
                        class="tw-h-full tw-w-[38px] tw-flex tw-justify-center tw-items-center tw-touch-manipulation"
                      >
                        {% render 'icon-42', name: 'quantity-plus' %}
                      </button>
                    </div>
                    {% if current_variant.available == true %}
                      {% comment %} Add to cart {% endcomment %}
                      <button
                        class="selector--atc tw-relative tw-w-full tw-h-12 lg:tw-h-11 tw-flex tw-items-center tw-justify-center tw-bg-sc-yellow tw-rounded-[134px] hide-in-quick-view tw-transition-all tw-duration-200 hover:tw-bg-sc-yellow/80"
                        :aria-busy="isAddingToCart"
                        @click="addToCart()"
                        type="button"
                        :class="{'tw-pointer-events-none tw-opacity-70' : selectedVariant?.available === false}"
                      >
                        <span class="tw-uppercase tw-text-sc-blue tw-text-sm tw-leading-[16px] tw-font-medium">
                          {{- 'products.product.add_to_bag' | t -}}
                        </span>

                        <span
                          x-show.delay.200ms="loader"
                          class="tw-absolute tw-inset-0 tw-flex tw-justify-center tw-items-center"
                        >
                          {%- render 'icon-42', name: 'loader', class: 'tw-w-5 tw-text-sc-blue tw-fill-sc-blue' -%}
                        </span>
                      </button>
                    {% else %}
                      {%- if show_newsletter -%}
                        {% comment %} product soldout notification {% endcomment %}
                        <button
                          class="selector--atc tw-relative tw-w-full tw-h-12 lg:tw-h-11 tw-flex tw-items-center tw-justify-center tw-bg-sc-yellow tw-rounded-[134px] tw-transition-all tw-duration-200 hover:tw-bg-sc-yellow/80"
                          type="button"
                          @click="openSoldoutMotification();"
                        >
                          <span class="tw-uppercase tw-text-sc-blue tw-text-sm tw-leading-[16px] tw-font-medium">
                            {{- 'general.newsletter_form.newsletter_product_availability' | t -}}
                          </span>
                        </button>

                        {% render 'soldout-notification',
                          product_title: product.title,
                          current_variant: current_variant
                        %}
                      {%- endif -%}
                    {% endif %}

                    {% comment %} Only for Quick View {% endcomment %}
                    <button
                      class="tw-w-full tw-h-12 lg:tw-h-11 tw-flex tw-items-center tw-justify-center tw-bg-sc-yellow tw-rounded-[134px] show-only-in-quick-view"
                      :aria-busy="isAddingToCart"
                      @click="addToCart()"
                      type="button"
                      :class="{'tw-pointer-events-none tw-opacity-70' : selectedVariant?.available === false}"
                    >
                      <span class="tw-uppercase tw-text-sc-blue tw-text-sm tw-leading-[16px] tw-font-medium">
                        {{- 'products.product.add_to_bag' | t -}}
                      </span>
                    </button>
                  </div>

                  {% if show_buy_now_button %}
                    <button
                      class="tw-border tw-border-solid tw-border-sc-blue tw-relative tw-w-full tw-h-12 lg:tw-h-11 tw-flex tw-items-center tw-justify-center tw-bg-white tw-rounded-[134px] tw-transition-all tw-duration-200 hover:tw-bg-sc-light-blue/20"
                      :aria-busy="isAddingToCart"
                      @click="addBuyNow()"
                      type="button"
                      :class="{'tw-pointer-events-none tw-opacity-70' : selectedVariant?.available === false}"
                    >
                      <span class="tw-uppercase tw-text-sc-blue tw-text-sm tw-leading-[16px] tw-font-medium">
                        {{- 'products.product.buy_now' | t -}}
                      </span>
                      <span
                        x-show="loader"
                        class="tw-absolute tw-inset-0 tw-flex tw-justify-center tw-items-center"
                      >
                        {%- render 'icon-42', name: 'loader', class: 'md:tw-w-7 tw-w-5' -%}
                      </span>
                    </button>
                  {% endif %}
                </div>

              {% when 'text_with_icon_column' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-block' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)]{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                >
                  <div class="tw-flex tw-items-center tw-gap-2">
                    <div class="tw-w-6 tw-h-6 lg:tw-w-6.5 lg:tw-h-6.5 tw-flex tw-shrink-0">
                      {% if block.settings.icon != blank %}
                        <img
                          src="{{ block.settings.icon | img_url: 'master' }}"
                          alt="{{ block.settings.icon.alt }}"
                          class="tw-w-full tw-h-auto tw-object-cover"
                          height="100"
                          width="100"
                        >
                      {% else %}
                        {% render 'animated-icon', filename: block.settings.icon_name %}
                      {% endif %}
                    </div>

                    <p class="tw-text-black tw-text-sm !tw-leading-[22px] lg:tw-text-base lg:!tw-leading-[24px]">
                      {{ block.settings.text }}
                    </p>
                  </div>
                </div>

              {% when 'link' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-block' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] hide-in-quick-view{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                >
                  <a
                    href="{{ block.settings.link }}"
                    class="tw-border-sc-blue tw-border-b-[0.5px] tw-pb-1 tw-inline-flex tw-items-center tw-gap-1"
                  >
                    <div class="tw-w-5 tw-h-4 lg:tw-w-5.5 lg:tw-h-5 tw-flex tw-shrink-0">
                      {% if block.settings.icon != blank %}
                        <img
                          src="{{ block.settings.icon | img_url: 'master' }}"
                          alt="{{ block.settings.icon.alt }}"
                          class="tw-w-full tw-h-auto tw-object-cover"
                        >
                      {% endif %}
                    </div>

                    <h4 class="tw-text-sc-blue !tw-font-normal tw-text-sm !tw-leading-[14px] lg:tw-text-base lg:!tw-leading-[24px] tw-whitespace-nowrap">
                      {{ block.settings.text }}
                    </h4>
                  </a>
                </div>

              {% when 'privacy_policy' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-block' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] hide-in-quick-view{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                >
                  <div class="tw-flex tw-justify-between tw-gap-2 tw-bg-[#ECF2FF] tw-rounded-[12px] lg:tw-py-4 tw-pt-4 tw-pb-3 tw-px-3.5 lg:tw-px-6">
                    {% for i in (1..3) %}
                      {% liquid
                        assign icon_key = 'icon_' | append: i
                        assign text_key = 'text_' | append: i

                        assign icon = block.settings[icon_key]
                        assign text = block.settings[text_key]
                      %}
                      {% if icon != blank and text != blank %}
                        <div class="tw-flex tw-flex-col tw-justify-center tw-items-center tw-gap-2">
                          <img
                            src="{{ icon | img_url: 'master' }}"
                            alt="{{ icon.alt }}"
                            class="tw-w-8 tw-h-8 tw-object-cover"
                          >
                          <span class="tw-text-sc-blue lg:tw-text-xs lg:tw-leading-[16px] tw-text-center tw-text-[11px] tw-leading-[15px]">
                            {{- text -}}
                          </span>
                        </div>
                      {% endif %}
                    {% endfor %}
                  </div>
                </div>

              {% when 'accordion' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-block' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] hide-in-quick-view{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                >
                  {% if block.settings.answer != blank %}
                    <div class="tw-w-full tw-rounded-[10px] tw-overflow-hidden tw-border tw-border-solid tw-border-sc-blue/20">
                      <button
                        class="tw-w-full tw-flex tw-justify-between tw-gap-5 tw-items-center tw-py-4 tw-px-4 lg:tw-px-3.5"
                        @click="activeAccordion === '{{ block.id }}' ? activeAccordion = '' : activeAccordion = '{{ block.id }}'"
                      >
                        <h3 class="tw-text-sc-blue tw-text-left tw-text-base tw-leading-[24px] tw-font-normal">
                          {{- block.settings.question -}}
                        </h3>
                        <span x-show="activeAccordion !== '{{ block.id }}'">
                          {% render 'icon-42', name: 'accordion-plus', class: 'tw-w-[11px]' %}
                        </span>
                        <span x-cloak x-show="activeAccordion === '{{ block.id }}'">
                          {% render 'icon-42', name: 'accordion-minus', class: 'tw-w-[11px]' %}
                        </span>
                      </button>

                      <div
                        x-show="activeAccordion === '{{ block.id }}'"
                        x-collapse
                        x-cloak
                      >
                        <div class="rte-42 tw-flex tw-flex-col tw-text-sc-blue tw-pb-4 tw-px-4 lg:tw-px-3.5">
                          {{ block.settings.answer }}
                        </div>
                      </div>
                    </div>
                  {% endif %}
                </div>
              {% when 'separator' %}
                {% assign mobile_class = '' %}
                {% if block.settings.hide_on_mobile %}
                  {% assign mobile_class = ' tw-hidden lg:tw-block' %}
                {% endif %}
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] hide-in-quick-view{{ mobile_class }}"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                >
                  <div class="tw-w-full tw-h-[1px] tw-flex" style="background: #2C3C6033;"></div>
                </div>
              {% when 'related_product' %}
                {% liquid
                  assign title_related_product = block.settings.title_related_product
                  assign _product = block.settings.custom_product | default: product
                  assign product_list_limit = block.settings.product_list_limit
                  assign recommendation_intent = block.settings.recommendation_intent
                %}
                <!-- RELATED PRODUCT -->
                <div
                  class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] hide-in-quick-view"
                  style="--mt-desk: {{ block.settings.mt_desk }}px;--mt-mob: {{ block.settings.mt_mob }}px;"
                >
                  {% if title_related_product != blank %}
                    <h3 class="tw-font-bold tw-text-sc-blue tw-text-xs tw-leading-[18px] tw-mb-4">
                      {{ title_related_product }}
                    </h3>
                  {% endif %}
                  <div
                    x-data="relatedProducts"
                    id="related-product-{{ section.id }}"
                    data-id="related-product-{{ section.id }}"
                    class="tw-mt-3 tw-flex tw-w-full"
                    data-url="{{ routes.product_recommendations_url }}?section_id={{- section.id -}}&product_id={{- _product.id -}}&limit={{- product_list_limit -}}&intent={{- recommendation_intent -}}"
                  >
                    {%- if recommendations.performed? and recommendations.products_count > 0 -%}
                      <div class="tw-flex tw-flex-col tw-gap-3">
                        {% for product in recommendations.products %}
                          <div class="tw-w-full">
                            {% render '42-product-card-mini', product: product %}
                          </div>
                        {% endfor %}
                      </div>
                    {% endif %}
                  </div>
                </div>

              {% when 'pairs_well_with' %}
                {% liquid
                  assign _pair1_handle = block.settings.pair_product_1
                  assign _pair2_handle = block.settings.pair_product_2
                  assign _p1 = all_products[_pair1_handle]
                  assign _p2 = all_products[_pair2_handle]
                %}
                {% if _p1 and _p1.title and _p2 and _p2.title %}
                  {% render '42-pairs-well-with', layout: block %}
                {% else %}
                  {% comment %}Fallback to Shopify recommendations when pair products are missing{% endcomment %}
                  {% liquid
                    assign title_related_product = block.settings.heading | default: 'PAIRS WELL WITH...'
                    assign _product = product
                    assign product_list_limit = 2
                    assign recommendation_intent = 'complementary'
                  %}
                  <div
                    class="tw-mt-[var(--mt-mob)] lg:tw-mt-[var(--mt-desk)] hide-in-quick-view"
                    style="--mt-desk: 24px;--mt-mob: 24px;"
                  >
                    {% if title_related_product != blank %}
                      <h3 class="tw-font-bold tw-text-sc-blue tw-text-xs tw-leading-[18px] tw-mb-4">
                        {{ title_related_product }}
                      </h3>
                    {% endif %}
                    <div
                      x-data="relatedProducts"
                      id="related-product-{{ section.id }}-fallback"
                      data-id="related-product-{{ section.id }}-fallback"
                      class="tw-mt-3 tw-flex tw-w-full"
                      data-url="{{ routes.product_recommendations_url }}?section_id={{- section.id -}}&product_id={{- _product.id -}}&limit={{- product_list_limit -}}&intent={{- recommendation_intent -}}"
                    >
                      {%- if recommendations.performed? and recommendations.products_count > 0 -%}
                        <div class="tw-flex tw-flex-col tw-gap-3">
                          {% for product in recommendations.products %}
                            <div class="tw-w-full">
                              {% render '42-product-card-mini', product: product %}
                            </div>
                          {% endfor %}
                        </div>
                      {% endif %}
                    </div>
                  </div>
                {% endif %}
            {% endcase %}
          {% endfor %}
        </div>
      </div>
    </div>
    {% render 'product-json', product: product %}

    {%- if show_cart_bar -%}
      {%- render 'sticky-add-to-cart-bar', product: product -%}
    {%- endif -%}
  </div>
</div>

<script>
  // Link Judge.me badge to reviews section
  document.addEventListener('DOMContentLoaded', function() {
    // Wait for Judge.me badge to load
    setTimeout(function() {
      const judgeBadge = document.querySelector('.jdgm-prev-badge');
      
      if (judgeBadge) {
        // Make the badge clickable
        judgeBadge.style.cursor = 'pointer';
        
        // Add click event to scroll to review_widget
        judgeBadge.addEventListener('click', function(e) {
          e.preventDefault();
          const reviewWidget = document.querySelector('.jdgm-review-widget');
          if (reviewWidget) {
            reviewWidget.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        });
      }
    }, 2000); // Wait for Judge.me to initialize
  });
</script>

{% schema %}
{
  "name": "42 Product",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "Product gallery"
    },
    {
      "type": "checkbox",
      "id": "show_nav_btn",
      "label": "Show navigation button",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_buy_now_button",
      "label": "Show buy now button",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_cart_bar",
      "label": "Enable cart bar",
      "default": true
    },
    {
      "type": "header",
      "content": "Padding Y settings"
    },
    {
      "type": "number",
      "id": "pt_mob",
      "label": "Mobile padding top in px",
      "default": 15
    },
    {
      "type": "number",
      "id": "pb_mob",
      "label": "Mobile padding bottom in px",
      "default": 15
    },
    {
      "type": "number",
      "id": "pt_tab",
      "label": "Tablet padding top in px",
      "default": 15
    },
    {
      "type": "number",
      "id": "pb_tab",
      "label": "Tablet padding bottom in px",
      "default": 15
    },
    {
      "type": "number",
      "id": "pt_desk",
      "label": "Desktop padding top in px",
      "default": 50
    },
    {
      "type": "number",
      "id": "pb_desk",
      "label": "Desktop padding bottom in px",
      "default": 30
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "custom_title",
          "label": "Custom Title",
          "info": "Override the product title with custom text. Leave blank to use product title or metafield."
        },
        {
          "type": "text",
          "id": "title_metafield",
          "label": "Title Metafield",
          "info": "Enter metafield namespace and key (e.g., 'custom.seo_title' or 'product.short_title'). This will be used if Custom Title is blank.",
          "placeholder": "namespace.key"
        },
        {
          "type": "range",
          "id": "text_size_mobile",
          "label": "Text size mobile (px)",
          "min": 16,
          "max": 48,
          "step": 1,
          "default": 28
        },
        {
          "type": "range",
          "id": "text_size_desktop",
          "label": "Text size desktop (px)",
          "min": 20,
          "max": 60,
          "step": 1,
          "default": 32
        },
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 8
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 8
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "badge",
      "name": "Badge",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "custom_badge_text",
          "label": "Badge text"
        },
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 0
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 0
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1,
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 16
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "show_badge_save",
          "label": "Show badge save",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 17
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 24
        },
        {
          "type": "richtext",
          "id": "description",
          "label": "Description"
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "text_with_icon_column",
      "name": "Text with icon column",
      "settings": [
        {
          "type": "select",
          "id": "icon_name",
          "label": "Icon",
          "info": "Used when the 'Icon image' field is empty",
          "default": "icon-check",
          "options": [
            { "label": "Award", "value": "icon-award" },
            { "label": "Box", "value": "icon-box" },
            { "label": "Chat", "value": "icon-chat" },
            { "label": "Check", "value": "icon-check" },
            { "label": "Check circle", "value": "icon-check-circle" },
            { "label": "Cloud", "value": "icon-cloud" },
            { "label": "Diameter", "value": "icon-diameter" },
            { "label": "Discount", "value": "icon-discount" },
            { "label": "Donation", "value": "icon-donation" },
            { "label": "Droplet", "value": "icon-droplet" },
            { "label": "Info", "value": "icon-info-empty" },
            { "label": "Email", "value": "icon-email" },
            { "label": "Fast shipment", "value": "icon-fast-shipment" },
            { "label": "Flare", "value": "icon-flare" },
            { "label": "Flower", "value": "icon-flower" },
            { "label": "Gift", "value": "icon-gift" },
            { "label": "Green shipment", "value": "icon-green-shipment" },
            { "label": "Heart", "value": "icon-heart" },
            { "label": "Leaf", "value": "icon-leaf" },
            { "label": "Lightning", "value": "icon-lightning" },
            { "label": "Location", "value": "icon-location" },
            { "label": "Mail", "value": "icon-mail" },
            { "label": "Notes", "value": "icon-notes" },
            { "label": "Pants", "value": "icon-pants" },
            { "label": "Peace", "value": "icon-peace" },
            { "label": "Pin", "value": "icon-pin" },
            { "label": "Planet", "value": "icon-planet" },
            { "label": "Phone", "value": "icon-phone" },
            { "label": "Recycle", "value": "icon-recycle" },
            { "label": "Ruler", "value": "icon-ruler" },
            { "label": "Shield", "value": "icon-shield" },
            { "label": "Smile", "value": "icon-smile" },
            { "label": "Star", "value": "icon-star" },
            { "label": "Tree", "value": "icon-tree" },
            { "label": "Trophy", "value": "icon-trophy" },
            { "label": "Truck", "value": "icon-truck" },
            { "label": "Vegan", "value": "icon-vegan" },
            { "label": "Wash", "value": "icon-wash" },
            { "label": "Washing machine", "value": "icon-washing-machine" }
          ]
        },
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 8
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 8
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon image"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "link",
      "name": "Button link",
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 24
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 24
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "variant_picker",
      "name": "Variant picker",
      "limit": 1,
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 24
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 24
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "Buy buttons",
      "limit": 1,
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 20
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 24
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "privacy_policy",
      "name": "Privacy policy",
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 20
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 20
        },
        {
          "type": "header",
          "content": "Settings item #1"
        },
        {
          "type": "image_picker",
          "id": "icon_1",
          "label": "Icon"
        },
        {
          "type": "text",
          "id": "text_1",
          "label": "Text"
        },
        {
          "type": "header",
          "content": "Settings item #2"
        },
        {
          "type": "image_picker",
          "id": "icon_2",
          "label": "Icon"
        },
        {
          "type": "text",
          "id": "text_2",
          "label": "Text"
        },
        {
          "type": "header",
          "content": "Settings item #3"
        },
        {
          "type": "image_picker",
          "id": "icon_3",
          "label": "Icon"
        },
        {
          "type": "text",
          "id": "text_3",
          "label": "Text"
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "separator",
      "name": "Separator",
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 24
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 24
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "related_product",
      "name": "Related product",
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 24
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 24
        },
        {
          "type": "text",
          "id": "title_related_product",
          "label": "Label",
          "default": "PAIRS WELL WITH..."
        },
        {
          "type": "product",
          "id": "custom_product",
          "label": "Product"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 100,
          "step": 1,
          "default": 20,
          "label": "Maximum products to show"
        },
        {
          "type": "select",
          "id": "recommendation_intent",
          "label": "Recommendation intents",
          "options": [
            { "label": "Related", "value": "related" },
            { "label": "Complementary", "value": "complementary" }
          ],
          "default": "related"
        }
      ]
    },
    {
      "type": "accordion",
      "name": "Accordion",
      "settings": [
        {
          "type": "number",
          "id": "mt_desk",
          "label": "Margin top desktop",
          "default": 0
        },
        {
          "type": "number",
          "id": "mt_mob",
          "label": "Margin top mobile",
          "default": 0
        },
        {
          "type": "text",
          "id": "question",
          "label": "Question"
        },
        {
          "type": "richtext",
          "id": "answer",
          "label": "Answer"
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    },
    {
      "type": "pairs_well_with",
      "name": "Pairs well with",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "PAIRS WELL WITH..."
        },
        {
          "type": "product",
          "id": "pair_product_1",
          "label": "Pair product #1"
        },
        {
          "type": "product",
          "id": "pair_product_2",
          "label": "Pair product #2"
        },
        {
          "type": "checkbox",
          "id": "hide_on_mobile",
          "label": "Hide on mobile",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "42 Product",
      "blocks": [
        {
          "type": "badge",
          "settings": {
            "custom_badge_text": "{{ product.metafields.product.badge.value }}",
            "mt_desk": 0,
            "mt_mob": 0
          }
        },
        {
          "type": "title",
          "settings": {
            "mt_desk": 8,
            "mt_mob": 8
          }
        },
        {
          "type": "price",
          "settings": {
            "mt_desk": 16,
            "mt_mob": 10,
            "show_badge_save": true
          }
        },
        {
          "type": "shopify://apps/judge-me-reviews/blocks/preview_badge/61ccd3b1-a9f2-4160-9fe9-4fec8413e5d8",
          "settings": {}
        },
        {
          "type": "text",
          "settings": {
            "mt_desk": 17,
            "mt_mob": 24,
            "description": "<p>{{ product.metafields.product.p_value_prop_text.value }}</p>"
          }
        },

        {
          "type": "text_with_icon_column",
          "settings": {
            "mt_desk": 16,
            "mt_mob": 16,
            "icon": "{{ product.metafields.custom.p_key_outcome_image_1.value }}",
            "text": "{{ product.metafields.product.key_outcome_1.value }}"
          }
        },
        {
          "type": "text_with_icon_column",
          "settings": {
            "mt_desk": 8,
            "mt_mob": 8,
            "icon": "{{ product.metafields.custom.p_key_outcome_image_2.value }}",
            "text": "{{ product.metafields.product.key_outcome_2.value }}"
          }
        },
        {
          "type": "text_with_icon_column",
          "settings": {
            "mt_desk": 8,
            "mt_mob": 8,
            "icon": "{{ product.metafields.custom.p_key_outcome_image_3.value }}",
            "text": "{{ product.metafields.product.key_outcome_3.value }}"
          }
        },

        {
          "type": "link",
          "settings": {
            "mt_desk": 24,
            "mt_mob": 24,
            "icon": "shopify://shop_images/line-md_watch.png",
            "text": "See inside the {{ product.title }}",
            "link": "#intimacy-deck"
          }
        },
        {
          "type": "variant_picker",
          "settings": {
            "mt_desk": 24,
            "mt_mob": 24
          }
        },
        {
          "type": "buy_buttons",
          "settings": {
            "mt_desk": 20,
            "mt_mob": 24
          }
        },
        {
          "type": "privacy_policy",
          "settings": {
            "mt_desk": 20,
            "mt_mob": 20,
            "icon_1": "shopify://shop_images/Trusted_by_200_000.png",
            "text_1": "Trusted by 200,000+",
            "icon_2": "shopify://shop_images/30-Day_Returns.png",
            "text_2": "30-Day Returns",
            "icon_3": "shopify://shop_images/Free_US_Shipping.png",
            "text_3": "Free US Shipping*"
          }
        },
        {
          "type": "accordion",
          "settings": {
            "mt_desk": 24,
            "mt_mob": 24,
            "question": "What you get",
            "answer": "{{ product.metafields.product.features | metafield_tag }}"
          }
        },
        {
          "type": "accordion",
          "settings": {
            "mt_desk": 8,
            "mt_mob": 8,
            "question": "Details & Specs",
            "answer": "{{ product.metafields.custom.feature_content | metafield_tag }}"
          }
        },
        {
          "type": "accordion",
          "settings": {
            "mt_desk": 8,
            "mt_mob": 8,
            "question": "Why it works",
            "answer": "{{ product.metafields.product.why_it_works | metafield_tag }}"
          }
        },
        {
          "type": "accordion",
          "settings": {
            "mt_desk": 8,
            "mt_mob": 8,
            "question": "How to use",
            "answer": "{{ product.metafields.product.how_to_use | metafield_tag }}"
          }
        },
        {
          "type": "separator",
          "settings": {
            "mt_desk": 24,
            "mt_mob": 24
          }
        },
        {
          "type": "pairs_well_with",
          "settings": {
            "heading": "PAIRS WELL WITH...",
            "pair_product_1": "self-planner",
            "pair_product_2": "its-a-date"
          }
        }
      ]
    }
  ]
}
{% endschema %}
